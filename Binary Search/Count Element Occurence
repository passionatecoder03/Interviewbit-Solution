int bs(vector<int> a,int s,int e,int k,int c)
{
	int res = -1;
	while(s<=e)
	{
		int mid = (s+e)/2;
		if(a[mid]==k)
		{	
			res=mid;
			if(c)
			{
				e=mid-1;
			}
			else
			{
				s=mid+1;
			}
		}
		else if(a[mid] < k )
		{
			s=mid+1;
		}
		else
		{
			e=mid-1;
		}
	}
	return res;
}

int Solution::findCount(const vector<int> &a, int k) {
    int n=a.size(),fir,sec,ans;
    fir=bs(a,0,n-1,k,0);
    sec=bs(a,0,n-1,k,1);
    ans=fir-sec;
    if(fir==-1)
        return 0;
    return ans+1;
}
