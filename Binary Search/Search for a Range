int bs(vector<int> a , int s, int e ,int k,int op)
{
    int ans=-1;
    while(s<=e)
    {
        int mid = s+(e-s) / 2;
        if(a[mid] == k)
        {
        //    cout<<"eq"<<mid<<endl;
            ans=mid;
            if(op==1)
                e= mid-1;
            else
                s=mid+1;
        }
        else if(a[mid] > k)
        {
            e = mid-1;
        }
        else if(a[mid] < k)
        {
            s = mid + 1; 
        }
        
    }
    
//     cout<<"ans = "<<ans<<endl;
    return ans;    
}

vector<int> Solution::searchRange(const vector<int> &a, int k) {
        int n = a.size();
        int ans = bs(a,0,n-1,k,1);
    //    cout<<ans<<endl;
        vector<int> sol;
        sol.push_back(ans);
        ans = bs(a,0,n-1,k,0);
    //    cout<<ans<<endl;
        sol.push_back(ans);
        return sol;
    }
