class MyStack {
    queue <int> a;
    queue <int> b;
    queue <int> c;
public:
    /** Initialize your data structure here. */
    MyStack() {
        
    }
    
    /** Push element x onto stack. */
    void push(int x) {
        a.push(x);
    }
    
    /** Removes the element on top of the stack and returns that element. */
    int pop() {
        int tem;
        if(empty())
		{
			return 0;
		}
		else
		{
			while(a.size()!=1)
			{
				b.push(a.front());
				a.pop();
			}
			if(a.size()==1)
			{
				tem = a.front();
				a.pop();
			}
			queue<int> temp;
			temp=a;
			a=b;
			b=temp;
            return tem;
		}
    }
    
    /** Get the top element. */
    int top() {
       int tem;
        if(empty())
		{
			return 0;
		}
		else
		{
			while(a.size()!=1)
			{
				b.push(a.front());
				a.pop();
			}
			if(a.size()==1)
			{
				tem = a.front();
                b.push(a.front());
				a.pop();
			}
			queue<int> temp;
			temp=a;
			a=b;
			b=temp;
            return tem;
		}
    }
    
    /** Returns whether the stack is empty. */
    bool empty() {
        if(a.size()==0&&b.size()==0)
            return 1;
        else
            return 0;

    }
};

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack* obj = new MyStack();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->top();
 * bool param_4 = obj->empty();
 */
